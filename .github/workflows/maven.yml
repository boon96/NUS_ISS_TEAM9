# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push: 
    branches: [ "cicd" ]
  pull_request:
    branches: [ "cicd" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
    - uses: actions/checkout@v3
    - uses: browser-actions/setup-chrome@latest
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

#    - name: Install node modules
#      run: npm --prefix frontend install

    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        npm --prefix frontend ci --force

#    - name: Start the development server - DONT RUN THIS!!!!
#      run: npm --prefix frontend start

#    - name: Lint
#      run: |
#        npm --prefix frontend run lint

    - name: Update types to latest
      run: |
        npm --prefix frontend install --save-dev @types/node@latest --force
      #- name: Test
      #  run: |
      #    npm run test --watch=false --browsers=ChromeHeadless

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{secrets.TEAM9_NUS_TOKEN}}
        output-file: "false"
        version-file: "frontend/package.json"


    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{secrets.TEAM9_NUS_TOKEN}}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
    - name: Deploy
      run: |
        npm --prefix frontend run deploy

#    - name: Build and Test Java with Maven
#      run: |
#        mvn test
#
#    - uses: actions/checkout@v4
#    - name: Use Node.js
#      uses: actions/setup-node@v4
#      with:
#        node-version: '21.x'
#    - name: Install dependencies
#      run: |
#        cd frontend
#        npm install
    # - name: run tests 
    #   run: |
    #     cd frontend
    #     npm ci
    #     npm test

    
